!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);const n=(t,e,i)=>{t.fillStyle="#888888",t.fillRect(0,0,e,i)},s=(t,e,i,n)=>{i.fillStyle=n;for(let n=0,s=t.length;n<s;n++){let s=t[n];i.fillRect(s.x*e+1,s.y*e+1,e-2,e-2)}},r=40,y=30,o=800/r,l=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]];class x{constructor(t){this.snake=t}drawSnake(t){s(this.snake,o,t,"rgb(0, 255, 0)"),t.fillStyle="#000000",t.fillRect(this.snake[0].x*o+6,this.snake[0].y*o+6,o-12,o-12)}moveSnake(t,e,i){const n=this.snake[0],s=this.newSnakeHeadPosition(n,i);if(null!==s){this.isMoveInvalid(s,t,e)||(this.snake.pop(),this.snake.unshift(s))}}newSnakeHeadPosition(t,e){return"ArrowUp"===e?{x:t.x,y:t.y-1}:"ArrowDown"===e?{x:t.x,y:t.y+1}:"ArrowLeft"===e?{x:t.x-1,y:t.y}:"ArrowRight"===e?{x:t.x+1,y:t.y}:null}isMoveInvalid(t,e,i){if(this.snake.filter(e=>e.x===t.x&&e.y===t.y).length>0)return!0;for(let i=0;i<y;i++)for(let n=0;n<r;n++)if(1===e[i][n]&&t.x===n&&t.y===i)return!0;for(let e=0,n=i.length;e<n;e++)if(i[e].willCollide(t))return!0;return!1}snakeEatsApple(t){const e=this.snake[0];for(let i=0,n=t.length;i<n;i++)if(e.x===t[i].x&&e.y===t[i].y){if(t.splice(i,1),new Audio("eat.mp3").play(),0===t.length){const t=this.snake[this.snake.length-1];this.snake.push({x:t.x,y:t.y})}return}}isSnakeOutside(){const t=this.snake[0];return t.x<0||t.x>=r||t.y<0||t.y>=y}validMovesLeft(t,e){const i=this.snake[0],n=[{x:i.x,y:i.y-1},{x:i.x-1,y:i.y},{x:i.x+1,y:i.y},{x:i.x,y:i.y+1}];for(let i of n)if(!this.isMoveInvalid(i,t,e))return!0;return!1}}class a{constructor(t){this.position=t,this.state=0,this.isOpening=!1,this.lastUpdateTimeStamp=null}draw(t){t.fillStyle="rgb(222, 184, 135)",0===this.state&&t.fillRect((this.position.x+2)*o+1,this.position.y*o+1,o-2,o-2),this.state<=1&&(t.fillRect((this.position.x+1)*o+1,this.position.y*o+1,o-2,o-2),t.fillRect((this.position.x+3)*o+1,this.position.y*o+1,o-2,o-2)),this.state<=2&&(t.fillRect(this.position.x*o+1,this.position.y*o+1,o-2,o-2),t.fillRect((this.position.x+4)*o+1,this.position.y*o+1,o-2,o-2))}update(t){this.lastUpdateTimeStamp||(this.lastUpdateTimeStamp=t),t-this.lastUpdateTimeStamp>500&&(this.lastUpdateTimeStamp=t,this.isOpening&&this.state<3&&this.state++)}willCollide(t){if(t.y===this.position.y)if(0===this.state){if(this.position.x<=t.x&&t.x<=this.position.x+4)return!0}else if(1===this.state){if(t.x===this.position.x||t.x===this.position.x+1||t.x===this.position.x+3||t.x===this.position.x+4)return!0}else if(2===this.state&&(t.x===this.position.x||t.x===this.position.x+4))return!0;return!1}startOpening(){this.isOpening||(this.isOpening=!0,new Audio("open.mp3").play())}}class p{constructor(t,e){this.pattern=t,this.gate=e}draw(t){s(this.pattern,o,t,"#DDDDDD"),this.drawShining(t)}update(t){for(let e=0,i=this.pattern.length;e<i;e++)for(let i=0,n=t.snake.length;i<n;i++){if(this.pattern[e].x===t.snake[i].x&&this.pattern[e].y===t.snake[i].y){this.pattern[e].isTriggered=!0;break}this.pattern[e].isTriggered=!1}this.pattern.filter(t=>t.isTriggered).length===this.pattern.length&&this.gate.startOpening()}drawShining(t){t.fillStyle="#B29700";for(let e=0,i=this.pattern.length;e<i;e++)if(this.pattern[e].isTriggered){const i=this.pattern[e];t.fillRect(i.x*o-5,i.y*o-5,o+10,o+10)}}}const h=((t,e)=>{const i=document.createElement("canvas");return i.width=t,i.height=e,i.style.width=t,i.style.height=e,i})(800,600),u=h.getContext("2d");document.body.appendChild(h);let d=[{x:1,y:24},{x:2,y:18},{x:8,y:19},{x:13,y:10},{x:35,y:4},{x:35,y:7},{x:34,y:14},{x:38,y:22},{x:23,y:25}],f=new x([{x:27,y:25},{x:28,y:25},{x:29,y:25},{x:30,y:25},{x:31,y:25},{x:32,y:25},{x:33,y:25},{x:34,y:25},{x:35,y:25},{x:36,y:25},{x:37,y:25}]),c=new a({x:18,y:0}),g=new a({x:33,y:10}),w=new p([{x:14,y:20},{x:15,y:20},{x:16,y:20},{x:17,y:20},{x:18,y:20},{x:19,y:20},{x:20,y:20},{x:21,y:20},{x:22,y:20},{x:23,y:20},{x:24,y:20}],g),m=new p([{x:4,y:4},{x:4,y:5},{x:4,y:6},{x:4,y:7},{x:4,y:8},{x:4,y:9},{x:4,y:10},{x:5,y:10},{x:5,y:9},{x:6,y:9},{x:6,y:10},{x:6,y:11}],c);const S=()=>{n(u,800,600),((t,e,i,n,s)=>{for(let r=0;r<e;r++)for(let e=0;e<i;e++)1===t[r][e]?(s.fillStyle="#000000",s.fillRect(e*n+1,r*n+1,n-2,n-2)):(s.fillStyle="#FFFFFF",s.fillRect(e*n,r*n,n,n))})(l,y,r,o,u),((t,e,i)=>{s(t,e,i,"rgb(255, 0, 0)")})(d,o,u),c.draw(u),g.draw(u),w.draw(u),m.draw(u),f.drawSnake(u)},k=()=>{d=[{x:1,y:24},{x:2,y:18},{x:8,y:19},{x:13,y:10},{x:35,y:4},{x:35,y:7},{x:34,y:14},{x:38,y:22},{x:23,y:25}],f=new x([{x:27,y:25},{x:28,y:25},{x:29,y:25},{x:30,y:25},{x:31,y:25},{x:32,y:25},{x:33,y:25},{x:34,y:25},{x:35,y:25},{x:36,y:25},{x:37,y:25}]),c=new a({x:18,y:0}),g=new a({x:33,y:10}),w=new p([{x:14,y:20},{x:15,y:20},{x:16,y:20},{x:17,y:20},{x:18,y:20},{x:19,y:20},{x:20,y:20},{x:21,y:20},{x:22,y:20},{x:23,y:20},{x:24,y:20}],g),m=new p([{x:4,y:4},{x:4,y:5},{x:4,y:6},{x:4,y:7},{x:4,y:8},{x:4,y:9},{x:4,y:10},{x:5,y:10},{x:5,y:9},{x:6,y:9},{x:6,y:10},{x:6,y:11}],c),O="GAME"};let v=null;const A=new Audio("gameover.mp3"),b=new Audio("win.mp3"),K=new class{constructor(){this.presedKey=null,this.unusedKey=null,document.addEventListener("keydown",this.onKeyDown.bind(this)),document.addEventListener("keyup",this.onKeyUp.bind(this))}onKeyDown(t){(this.isArrowKey(t.code)||"Space"===t.code)&&(this.presedKey=t.code,this.unusedKey=t.code)}onKeyUp(t){this.presedKey===t.code&&(this.presedKey=null)}isArrowKey(t){return"ArrowUp"===t||"ArrowDown"===t||"ArrowLeft"===t||"ArrowRight"===t}getCurrentKey(){const t=this.presedKey||this.unusedKey;return this.unusedKey=null,t}};let O="GAME";k();const T=t=>{"GAME"===O?((t=>{v||(v=t),t-v>150&&(v=t,f.moveSnake(l,[c,g],K.getCurrentKey()),f.snakeEatsApple(d)),w.update(f),m.update(f),c.update(t),g.update(t),f.isSnakeOutside()?(b.currentTime=0,b.play(),O="WIN"):f.validMovesLeft(l,[c,g])||(A.currentTime=0,A.play(),O="GAME_OVER")})(t),S()):"GAME_OVER"===O?(n(u,800,600),u.fillStyle="#000000",u.font="50px Georgia",u.fillText("Game Over",100,100),u.fillText("Press space to play again",100,200),"Space"===K.getCurrentKey()&&(A.pause(),k())):"WIN"===O&&(n(u,800,600),u.fillStyle="#000000",u.font="50px Georgia",u.fillText("WIN!!!",100,100),u.fillText("Press space to play again",100,200),"Space"===K.getCurrentKey()&&(b.pause(),k())),window.requestAnimationFrame(T)};window.requestAnimationFrame(T)}]);